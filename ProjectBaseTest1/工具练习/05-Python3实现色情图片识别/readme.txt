
肤色像素检测与皮肤区域划分算法
Pillow 模块的使用 https://pillow.readthedocs.io/en/latest/index.html
argparse 模块的使用 https://docs.python.org/3/library/argparse.html

python3.5
Pillow5.1

安装
 sudo pip3 install Pillow

1.遍历每个像素，检测像素颜色是否为肤色
2.将相邻的肤色像素归为一个皮肤区域，得到若干个皮肤区域
3.剔除像素数量极少的皮肤区域


定义非色情图片的判定规则如下（满足任意一个判定为真）：
1.皮肤区域的个数小于 3 个
2.皮肤区域的像素与图像所有像素的比值小于 15%
3.最大皮肤区域小于总皮肤面积的 45%
4.皮肤区域数量超过60个


关于像素肤色判定这方面，公式可以在网上找到很多，但世界上不可能有正确率 100% 的公式
RGB 颜色模式
第一种：r > 95 and g > 40 and g < 100 and b > 20 and max([r, g, b]) - min([r, g, b]) > 15 and abs(r - g) > 15 and r > g and r > b
第二种：nr = r / (r + g + b), ng = g / (r + g + b), nb = b / (r +g + b), nr / ng > 1.185 and r * b / (r + g + b) ** 2 > 0.107 and r * g / (r + g + b) ** 2 > 0.112

HSV 颜色模式
h > 0 and h < 35 and s > 0.23 and s < 0.68

YCbCr 颜色模式
97.5 <= cb <= 142.5 and 134 <= cr <= 176


一幅图像有零个到多个的皮肤区域，程序按发现顺序给它们编号，第一个发现的区域编号为 0，第 n 个发现的区域编号为 n-1

我们用一种类型来表示像素，我们给这个类型取名为 Skin，包含了像素的一些信息：唯一的 编号（id），是/否肤色（skin），皮肤区域号（region），横坐标（x），纵坐标（y）

遍历所有像素时，我们为每个像素创建一个与之对应的 Skin 对象，并设置对象的所有属性

其中 region 属性即为像素所在的皮肤区域编号，创建对象时初始化为无意义的 None

遍历所有像素时，创建 Skin 对象后，如果当前像素为肤色，且相邻的像素有肤色的，那么我们把这些肤色像素归到一个皮肤区域

相邻像素的定义：通常都能想到是当前像素周围的 8** 个像素，然而实际上只需要定义 **4 个就可以了，位置分别在当前像素的左方，左上方，正上方，右上方；因为另外四个像素都在当前像素后面，我们还未给这4个像素创建对应的 Skin 对象





